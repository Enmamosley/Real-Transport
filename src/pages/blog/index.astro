---
import BlogCard from "@/components/BlogCard.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
const call_to_action = (await getEntry(
  "callToAction",
  "call-to-action"
)) as CollectionEntry<"callToAction">;

const postIndex = (await getEntry("blog", "-index")) as CollectionEntry<"blog">;
const { title, header_title, description } = postIndex.data;
const posts = await getSinglePage("blog");
---

<Base title={title} meta_title={""} image={""} description={description}>
  <section class="section bg-light">
    <div class="container">
      <div class="max-w-2xl mx-auto text-center">
        <h1
          class="pb-4"
          data-aos="fade-up-sm"
          set:html={markdownify(header_title!)}
        />
        <p
          class="pb-8"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(description)}
        />
      </div>
    </div>
  </section>
  <section class="section pb-0">
    <div class="container">
      <div class="row g-4">
        {
          posts.map((post, i) => (
            <div
              data-aos="fade-up-sm"
              data-aos-delay={(i + 1) * 100}
              class="relative sm:col-6 lg:col-4 group"
            >
              <BlogCard post={post} />
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <CallToAction call_to_action={call_to_action} />
</Base>
