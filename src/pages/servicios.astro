---
import CustomAccordion from "@/helpers/CustomAccordion";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const serviceIndex = (await getEntry(
  "services",
  "-index"
)) as CollectionEntry<"services">;
const { title, banner_title, description, meta_title, button } =
  serviceIndex.data;
const testimonial = (await getEntry(
  "testimonials",
  "testimonial"
)) as CollectionEntry<"testimonials">;
const call_to_action = (await getEntry(
  "callToAction",
  "call-to-action"
)) as CollectionEntry<"callToAction">;
const services = await getSinglePage("services");
const faqs = (await getEntry("faq", "faq")) as CollectionEntry<"faq">;
---

<Base title={title} meta_title={meta_title} description={description}>
  <section class="section bg-light">
    <div class="container">
      <div class="max-w-2xl mx-auto text-center">
        {
          banner_title && (
            <h1
              class="pb-4"
              data-aos="fade-up-sm"
              set:html={markdownify(banner_title)}
            />
          )
        }
        {
          description && (
            <div data-aos="fade-up-sm" data-aos-delay="100">
              <p class="pb-8" set:html={markdownify(description)} />
            </div>
          )
        }
        {
          button?.enable && (
            <a
              href={button.link}
              class="btn btn-primary"
              data-aos="fade-up-sm"
              data-aos-delay="200"
            >
              {button.label}
            </a>
          )
        }
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container">
      <div
        class="flex flex-col gap-20 lg:gap-24 xl:gap-32 max-w-xl lg:max-w-full mx-auto"
      >
        {
          services.map((s, i: number) => (
            <div class="flex flex-col lg:flex-row justify-between items-center gap-10">
              <div
                class={`lg:w-[60%] w-full ${i % 2 !== 0 && "lg:order-2"}`}
                data-aos={`${i % 2 !== 0 ? "fade-left-sm" : "fade-right-sm"}`}
                data-aos-delay={i * 100}
              >
                <h3 class="text-4xl pb-8" set:html={s.data.title} />
                <p class="pb-6" set:html={s.data.contact_1} />
                <p class="pb-8" set:html={s.data.contact_2} />
                {s?.data?.button?.enable && (
                  <a href={s.data.button.link} class="btn btn-primary">
                    {s.data.button.label}
                  </a>
                )}
              </div>
              <div
                class={`lg:w-[40%] w-full`}
                data-aos={`${i % 2 !== 0 ? "fade-right-sm" : "fade-left-sm"}`}
                data-aos-delay={i * 100}
              >
                <div class="border border-border rounded-xl p-20">
                  <Icon
                    name={s.data.image}
                    class={`h-auto w-full mx-auto ${
                      i !== services.length - 1 ? "spin-animation" : ""
                    }`}
                  />
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="section bg-primary">
    <div class="container text-white">
      <div class="pb-24 lg:pb-28">
        <div class="flex flex-col gap-10 justify-center">
          <div>
            <h2
              class="text-white text-center pb-4"
              data-aos="fade-up-sm"
              set:html={markdownify(testimonial.data.homepage_title)}
            />
            <p
              class="max-w-xl mx-auto text-center text-light/80"
              data-aos="fade-up-sm"
              set:html={markdownify(testimonial.data.content)}
            />
          </div>

          <Testimonial
            testimonials={testimonial.data.testimonials.slice(0, 3)}
          />
        </div>
      </div>
    </div>
  </section>

  <CustomAccordion faqs={faqs.data} client:only="react" />
  <CallToAction call_to_action={call_to_action} />
</Base>
