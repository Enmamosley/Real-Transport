---
// ServiceSlider.astro
import DynamicIcon from "@/helpers/DynamicIcon";
import { markdownify } from "@/lib/utils/textConverter";

interface Props {
  feature: any[];
}

const { feature } = Astro.props;
---

<div class="w-full md:w-1/2">
  <div
    class="relative h-full border border-border bg-light rounded-xl overflow-hidden"
    data-aos="fade-right-sm"
  >
    <div
      class="p-8 md:h-full h-[500px] md:p-14 bg-[url('/images/pattern.png')] bg-[length:60%] bg-center bg-no-repeat"
    >
      {
        feature.map((f, i) => (
          <div
            class={`absolute w-[90%] md:w-max h-max top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 transition-opacity duration-300 ${i === 0 ? "opacity-100" : "opacity-0 pointer-events-none"}`}
            data-tab-content={i}
          >
            <img
              src={f.image}
              width={259}
              height={0}
              alt="feature image"
              class="mx-auto"
            />

            <div class="flex items-center gap-4 px-5 py-3 mt-4 bg-secondary rounded-xl">
              <DynamicIcon
                icon={f.icon}
                className="text-white shrink-0 w-14 h-14"
                client:only="react"
              />
              <div>
                <h3
                  class="pb-1 text-xl text-white"
                  set:html={markdownify(f.title)}
                />
                <p class="text-xs text-white/70" set:html={f.card_content} />
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</div>

<div class="w-full md:w-1/2">
  <div class="row md:gy-4">
    {
      feature.map((f, i) => (
        <div data-tab-trigger={i} class="cursor-pointer">
          <div
            class="flex flex-col pb-10 md:pb-7 gap-5 sm:flex-row items-start"
            data-aos="fade-left-sm"
            data-aos-delay={i * 100}
          >
            <div class="p-2 rounded-full bg-secondary">
              <DynamicIcon
                icon={f.icon}
                className="text-white shrink-0 w-7 h-7"
                client:only="react"
              />
            </div>
            <div class="pb-5 hover-border-effect">
              <h3 class="pb-4 text-2xl" set:html={markdownify(f.title)} />
              <p set:html={markdownify(f.description)} />
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>

<script>
  // Client-side JavaScript
  document.addEventListener("astro:page-load", () => {
    const tabTriggers = document.querySelectorAll("[data-tab-trigger]");
    const tabContents = document.querySelectorAll("[data-tab-content]");

    function setActiveTab(index: string | null) {
      // Hide all content
      tabContents.forEach((content) => {
        content.classList.remove("opacity-100");
        content.classList.add("opacity-0", "pointer-events-none");
      });

      // Show selected content
      const activeContent = document.querySelector(
        `[data-tab-content="${index}"]`
      );
      if (activeContent) {
        activeContent.classList.remove("opacity-0", "pointer-events-none");
        activeContent.classList.add("opacity-100");
      }
    }

    // Add click handlers to triggers
    tabTriggers.forEach((trigger) => {
      trigger.addEventListener("click", () => {
        const index = trigger.getAttribute("data-tab-trigger");
        setActiveTab(index);
      });
    });
  });
</script>
